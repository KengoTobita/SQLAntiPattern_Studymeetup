version: '3.8'

services:
  db-antipat:
    image: postgres:16
    container_name: sql_antipat_db
    hostname: db-antipat
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: antipat
    ports:
      - "5433:5432"  # ホストポートは5433だが、アプリからは5432でアクセス
    volumes:
      - ./antipat_init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "user", "-d", "antipat"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - sql_network

  faker-app-antipat:
    build: ./pyapp
    container_name: faker_app_antipat
    depends_on:
      db-antipat:
        condition: service_healthy
    environment:
      DB_HOST: db-antipat
      DB_PORT: 5432 
      DB_NAME: antipat
      DB_USER: user
      DB_PASS: pass
    networks:
      - sql_network
    volumes:
      - ./pyapp:/app
    command: ["python", "generate_antipat.py"]

  db-ec1:
    image: postgres:16
    container_name: sql_ec1_db
    hostname: db-ec1
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: ec1
    ports:
      - "5434:5432"  # ホストポートは5434だが、アプリからは5432でアクセス
    volumes:
      - ./ec1_init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "user", "-d", "ec1"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - sql_network

  faker-app-ec1:
    build: ./pyapp
    container_name: faker_app_ec1
    depends_on:
      db-ec1:
        condition: service_healthy
    environment:
      DB_HOST: db-ec1
      DB_PORT: 5432
      DB_NAME: ec1
      DB_USER: user
      DB_PASS: pass
    networks:
      - sql_network
    volumes:
      - ./pyapp:/app
    command: ["python", "generate_ec1.py"]

networks:
  sql_network:
    driver: bridge
